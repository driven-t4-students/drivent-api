version: '3'
services:
  drivent-postgres-development:
    image: postgres:13-alpine
    container_name: drivent-postgres-development
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - drivent-postgres-data:/var/lib/postgresql/data
    command: postgres -p ${POSTGRES_PORT}

  drivent-redis-development:
    container_name: drivent-redis-development
    image: redis:6.2-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    volumes:
      - /usr/local/drivent-redis/data:/data

  drivent-development:
    build:
      context: .
      dockerfile: Dockerfile.development
    container_name: drivent-development
    depends_on:
      - drivent-postgres-development
      - drivent-redis-development
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
    working_dir: /usr/src/drivent
    command: bash -c "npm run dev:load-envs npx prisma generate && npm run dev:load-envs npx prisma migrate deploy && npm run dev:load-envs npm run redis:seed && npm run dev:start"
    environment:
      NODE_ENV: development
    volumes:
      - ./src:/usr/src/drivent/src
      - ./prisma:/usr/src/drivent/prisma
      - ./.env.development:/usr/src/drivent/.env.development
      - ./.eslintrc.js:/usr/src/drivent/.eslintrc.js
      - ./.eslintignore:/usr/src/drivent/.eslintignore
      - ./.prettierrc.js:/usr/src/drivent/.prettierrc.js
      - ./tsconfig.json:/usr/src/drivent/tsconfig.json
    ports:
      - 4000:4000

volumes:
  drivent-postgres-data:

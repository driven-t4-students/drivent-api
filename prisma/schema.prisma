// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Enrollment Enrollment[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model Enrollment {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  cpf       String    @db.VarChar(255)
  birthday  DateTime
  phone     String    @db.VarChar(255)
  userId    Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  Address   Address[]
  Ticket    Ticket?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("enrollments")
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("addresses")
}

enum TicketType {
  online
  presential
}

model Ticket {
  id           Int        @id @default(autoincrement())
  type         TicketType
  hotel        Boolean    @default(false)
  totalValue   Int
  enrollmentId Int        @unique
  Enrollment   Enrollment @relation(fields: [enrollmentId], references: [id])
  bedId        Int?       @unique
  Bed          Bed?       @relation(fields: [bedId], references: [id])

  @@map("tickets")
}

model Hotel {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String
  

  Room Room[]
  @@map("hotels")
}

model Room {
  id      Int    @id @default(autoincrement())
  number  String
  hotelId Int
  Hotel   Hotel  @relation(fields: [hotelId], references: [id])
  type    Int

  Bed Bed[]
  @@map("rooms")
}

model Bed {
  id     Int     @id @default(autoincrement())
  roomId Int
  room   Room    @relation(fields: [roomId], references: [id])
  Ticket Ticket?
}
